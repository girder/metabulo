---
- hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
    venv: /home/gunicorn/venvs/metabulo
    sqlalchemy_database_path: "/home/gunicorn/db.sqlite3"
    sqlalchemy_database_uri: "sqlite:///{{ sqlalchemy_database_path }}"
    upload_folder: "/home/gunicorn/files"
    opencpu_api_root: "http://localhost:8004/ocpu/library"
    deploy_domain: "metabolomics.kitware.com"
    metabulo_sdist_path: "/tmp/metabulo/dist/metabulo-sdist.tar.gz"

  pre_tasks:
    - name: Install core system dependencies
      apt:
        name:
          - python3-dev
          - python3-venv
          - python3-pip
          - nginx
          - sqlite3
        update_cache: true
      become: true

  tasks:
    - name: Include docker role
      include_role:
        name: geerlingguy.docker
      vars:
        ansible_become: true

    - name: Install docker python package
      pip:
        name: docker
      become: true

    - name: Start opencpu container
      docker_container:
        name: opencpu
        image: metabulo/opencpu
        published_ports:
          - 127.0.0.1:8004:8004
        pull: true
      become: true

    - name: Create gunicorn user
      user:
        name: "gunicorn"
        shell: "/usr/sbin/nologin"
      become: true

    - name: Create nginx user
      user:
        name: "nginx"
        shell: "/usr/sbin/nologin"
      become: true

    - name: Install wheel package
      pip:
        name: "wheel"
        state: "present"
        virtualenv: "{{ venv }}"
        virtualenv_command: "{{ ansible_python_interpreter }} -m venv"
      become: true
      become_user: gunicorn

    - name: Install gunicorn
      pip:
        name: "gunicorn"
        state: "present"
        virtualenv: "{{ venv }}"
        virtualenv_command: "{{ ansible_python_interpreter }} -m venv"
      notify: Restart gunicorn
      become: true
      become_user: gunicorn

    - name: Copy metabulo sdist to the remote machine
      copy:
        src: "{{ metabulo_sdist_path }}"
        dest: "/tmp/metabulo-sdist.tar.gz"

    - name: Install metabulo python package
      pip:
        name: "/tmp/metabulo-sdist.tar.gz"
        state: "forcereinstall"
        extra_args: "--no-cache-dir"
        virtualenv: "{{ venv }}"
        virtualenv_command: "{{ ansible_python_interpreter }} -m venv"
      notify:
        - Restart gunicorn
      become: true
      become_user: gunicorn

    - name: Add gunicorn environment variables
      template:
          src: "home/gunicorn/.gunicorn_env"
          dest: "/home/gunicorn/.env"
          mode: 0600
      become: true
      become_user: gunicorn

    - name: Install gunicorn systemd service
      template:
        src: "etc/systemd/system/gunicorn.service"
        dest: "/etc/systemd/system/gunicorn.service"
      notify: Restart gunicorn
      become: true

    - name: Enable gunicorn service
      systemd:
        name: "gunicorn.service"
        daemon_reload: true
        enabled: true
        state: "started"
      become: true

    - name: Enable nginx service
      systemd:
        name: "nginx.service"
        daemon_reload: true
        enabled: true
        state: "started"
      become: true

    - name: Copy nginx configs
      copy:
        src: "data/nginx/"
        dest: "/etc/nginx/"
      notify: Restart nginx
      become: true

    - name: Remove the default nginx config
      file:
        state: absent
        path: /etc/nginx/sites-enabled/default
      notify: Restart nginx
      become: true

    - name: Delete old database
      file:
        path: "{{ sqlalchemy_database_path }}"
        state: "absent"
      become: true
      become_user: gunicorn

    - name: Create tables
      command: "{{ venv }}/bin/metabulo-create-tables"
      become: true
      become_user: gunicorn

  handlers:
    - name: Restart gunicorn
      systemd:
        name: "gunicorn.service"
        daemon_reload: true
        state: "reloaded"
      become: true

    - name: Restart nginx
      systemd:
        name: "nginx.service"
        daemon_reload: true
        state: "reloaded"
      become: true
